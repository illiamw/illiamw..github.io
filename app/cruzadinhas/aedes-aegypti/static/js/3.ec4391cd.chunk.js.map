{"version":3,"sources":["Components/ViewComponentsJogo/SubViewComponentsJogo/teclado/Buttons.js","Components/ViewComponentsJogo/SubViewComponentsJogo/teclado/Gaps.js","Components/ViewComponentsJogo/SubViewComponentsJogo/teclado/Tip.js","Components/ViewComponentsJogo/SubViewComponentsJogo/teclado/Contexto.js","Components/ViewComponentsJogo/teclado.js","Components/ViewComponentsJogo/SubViewComponentsJogo/tabuleiro/Timer.js","Components/ViewComponentsJogo/SubViewComponentsJogo/tabuleiro/Pontuacao.js","Components/ViewComponentsJogo/SubViewComponentsJogo/tabuleiro/Cell.js","Components/ViewComponentsJogo/tabuleiro.js","Components/ViewComponentsJogo/SubViewComponentsJogo/lista/Item.js","Components/ViewComponentsJogo/lista.js","Components/ViewComponentsJogo/SubViewComponentsJogo/vitoria.js","Components/ViewJogo.js"],"names":["React","Component","Vitoria","constructor","props","super","this","updateProgresso","console","log","Serve","auth","usuario","setProgresso","ControleJogo","modo","ControleModo","getFase","minutes","seconds","render","className","id","state","tempo","slice","pontos","nivel","to","type","ViewJogo","spinner","vitoria","update","bind","next","componentDidMount","Jogo","forceUpdate"],"mappings":"uNAIqCA,IAAMC,UC0BTD,IAAMC,UC1BPD,IAAMC,UCFDD,IAAMC,UCMPD,IAAMC,UCPRD,IAAMC,UCGPD,IAAMC,UC+BND,IAAMC,UC1BDD,IAAMC,UC0BXD,IAAMC,UC/BLD,IAAMC,U,iBCkB1B,MAAMC,UAAgBF,IAAMC,UAEzCE,YAAYC,GACVC,MAAMD,GACNE,KAAKC,kBAGPA,kBACEC,QAAQC,IAAI,cAAeH,KAAKF,MAAMM,MAAMC,KAAKC,SAEjDN,KAAKF,MAAMM,MAAMC,KAAKC,QAAQC,aAC5BP,KAAKF,MAAMU,aAAaC,KACxBT,KAAKF,MAAMU,aAAaE,aAAaC,UACrC,IACA,CAAEC,QAAS,EAAGC,QAAS,KAI3BC,SAEE,OACE,qBAAKC,UAAU,4DAAf,SACE,qBAAKA,UAAU,0EAAf,SACE,qBAAKA,UAAU,gDAAf,SACE,sBAAKA,UAAU,qHAAf,UACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,uCAAf,SACE,mBAAGA,UAAU,2EAAb,4BAIF,sBAAKA,UAAU,2DAAf,UACE,sBAAKA,UAAU,mCAAf,UACE,qBAAKA,UAAU,gDAAf,2BAGA,sBACEC,GAAG,aACHD,UAAU,8BAFZ,WAKI,KAAOf,KAAKF,MAAMU,aAAaS,MAAMC,MAAMN,SAC3CO,OAAO,GANX,KASI,KAAOnB,KAAKF,MAAMU,aAAaS,MAAMC,MAAML,SAC3CM,OAAO,MACJ,OAET,sBAAKJ,UAAU,mCAAf,UACE,qBAAKA,UAAU,gDAAf,6BAGA,qBAAKA,UAAU,8BAAf,SACGf,KAAKF,MAAMU,aAAaS,MAAMG,OAAS,EACpC,KAEE,QACwC,EAAxCpB,KAAKF,MAAMU,aAAaS,MAAMG,QAC9BD,OAAO,IACR,OAASnB,KAAKF,MAAMU,aAAaS,MAAMG,QAAQD,OAC7C,WAKb,8BACG,IADH,0BAEuB,IACpBnB,KAAKF,MAAMU,aAAaE,aAAaW,MAHxC,YAGqD,IAClDrB,KAAKF,MAAMU,aAAaE,aAAaC,UAJxC,UAQF,sBAAKI,UAAU,SAAf,UACE,yEAC0C,uBAD1C,mCAKA,cAAC,IAAD,CAAMO,GAAG,QAAT,SACE,yBACEC,KAAK,SACLR,UAAU,4CAFZ,UAIE,sBAAMA,UAAU,kDAAhB,4BAJF,0BC9FH,MAAMS,UAAiB9B,IAAMC,UAC1CE,YAAYC,GACVC,MAAMD,GAENE,KAAKiB,MAAQ,CACXQ,SAAS,EACTC,SAAS,GAIX1B,KAAK2B,OAAS3B,KAAK2B,OAAOC,KAAK5B,MAG/BA,KAAK6B,KAAO7B,KAAK6B,KAAKD,KAAK5B,MAS7B8B,qBAIAD,OACE7B,KAAKF,MAAMiC,KAAKF,OAChB7B,KAAK2B,SAGPA,SACE3B,KAAKgC,cAGPlB,SAGI,OAAO,cAAC,EAAD,CAASN,aAAcR,KAAKF,MAAMiC,KAAM3B,MAAOJ,KAAKF,MAAMM","file":"static/js/3.ec4391cd.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// Controladores\r\n\r\nexport default class Buttons extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      focus: 0,\r\n    };\r\n  }\r\n\r\n  // Linked Funcitons\r\n  deleteLetter(index){\r\n    if(index !== null && this.props.ControleJogo.state.hitWord[index] === false){\r\n      this.props.ControleGap(0);\r\n        this.props.ControleJogo.deleteLetter(index, this.props.ControleJogo.Construtor.principal[\r\n          index\r\n        ].posicao)\r\n        this.props.update();\r\n    }\r\n}\r\n\r\n  selectLetter(item, letter) {\r\n    this.props.ControleJogo.selectLetter(\r\n      item.posicao[\r\n        this.props.StateGap.gap[this.props.ControleJogo.state.focus]\r\n      ],\r\n      this.props.StateGap.gap[this.props.ControleJogo.state.focus],\r\n      letter\r\n    );\r\n    this.ControleGap();\r\n    this.props.update();\r\n  }\r\n\r\n  ControleGap() {\r\n    this.props.ControleGap(\r\n      this.props.StateGap.gap[this.props.ControleJogo.state.focus] + 1\r\n    );\r\n  }\r\n\r\n  // End Linked Funcitons\r\n\r\n  renderButton(item, index) {\r\n    return (\r\n      <div\r\n        className=\"flex ps-2 pt-2 pb-0 pe-0\"\r\n        style={this.props.ControleJogo.ControleModo.widthTeclas}\r\n        key={index}\r\n      >\r\n        <button\r\n          type=\"button\"\r\n          key={index + 100}\r\n          onClick={() => this.selectLetter(item, item.teclas[index])}\r\n          className=\"button-teclas bg-color1 w-100 arround-6 text-white1 text-center\"\r\n        >\r\n          {item.teclas[index]}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderButtons(item) {\r\n    var buttons = [];\r\n    for (let index = 0; index < item.teclas.length; index++) {\r\n      buttons.push(this.renderButton(item, index));\r\n    }\r\n    return React.createElement(\r\n      \"div\",\r\n      { className: \"d-flex  w-100 flex-wrap\" },\r\n      buttons\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Buttons d-flex container align-items-stretch px-md-1\">\r\n        <div className=\"flex  pt-2 position-relative  align-self-stretch\">\r\n          <button            \r\n            onClick={() => this.deleteLetter(this.props.ControleJogo.state.focus)}\r\n\r\n            type=\"button\"\r\n            className=\"button-teclas bg-color1 w-100 h-100 arround-6 text-white1 text-center\"\r\n          >\r\n            <i className=\"material-icons md-light text-white1 md-24\">\r\n            backspace\r\n            </i>\r\n          </button>\r\n        </div>\r\n        {this.renderButtons(\r\n          this.props.ControleJogo.Construtor.principal[\r\n            this.props.ControleJogo.state.focus\r\n          ]\r\n        )}\r\n        <div className=\"flex px-2 pt-2 position-relative  align-self-stretch\">\r\n          <span className=\"badge position-absolute top-0 end-0 rounded-circle  z-index-badge\">\r\n            {this.props.ControleJogo.state.tips}\r\n          </span>\r\n          <button\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#staticTips\"\r\n            type=\"button\"\r\n            className=\"button-teclas bg-color1 w-100 h-100 arround-6 text-white1 text-center\"\r\n          >\r\n            <i className=\"material-icons md-light text-white1 md-24\">\r\n              help_outline\r\n            </i>\r\n            Dica\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\n// Controladores\r\n\r\nconst status = {\r\n    found: {\r\n        backgroundColor: 'node',\r\n        color: 'white',\r\n        boxShadow: ' 0px -6px 0px 0px inset #C4C4C4'\r\n\r\n    },\r\n    select: {\r\n        backgroundColor: 'none',\r\n        color: 'white',\r\n        boxShadow: ' 0px -6px 0px 0px inset #71aaff'\r\n\r\n\r\n    },\r\n    hit: {\r\n        backgroundColor: '#71aaff',\r\n        color: 'white',\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport default class Gaps extends React.Component {\r\n\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n    }\r\n\r\n    ControleGap(index) {\r\n        this.props.ControleGap(index)\r\n    }\r\n\r\n    renderGap(item, index) {\r\n        return (\r\n            <div className=\"flex-fill w-100 h-cell m-2 text-center\"\r\n                style={index === this.props.StateGap.gap[this.props.ControleJogo.state.focus] ? status.select : status.found}\r\n                onClick={() => this.ControleGap(index)}\r\n                key={index}\r\n\r\n            >\r\n                {this.props.ControleJogo.state.statusWords[this.props.ControleJogo.state.focus][index]}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    renderGaps(item) {\r\n        var gaps = [];\r\n        for (let index = 0; index < item.letras.length; index++) {\r\n            gaps.push(this.renderGap(item, index));\r\n        }\r\n        return React.createElement('div', { className: \"d-flex w-100\" }, gaps);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"d-flex w-100 justify-content-center\">\r\n                <div className=\"Gaps flex px-md-1 w-100\">\r\n                    {/* <h5> Lacunas </h5> */}\r\n                    {this.renderGaps(this.props.ControleJogo.Construtor.principal[this.props.ControleJogo.state.focus])}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}","\r\nimport React from \"react\";\r\n\r\n\r\nexport default class Tip extends React.Component {\r\n\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n        /* eslint-disable */\r\n        super(props);\r\n\r\n    }\r\n\r\n    useTip() {\r\n        this.props.ControleJogo.useTip()\r\n        this.props.update();\r\n    }\r\n\r\n    createMarkup(val) {\r\n        // (this.props.ControleJogo.state.focus + 1) + \". \" + val \r\n        return { __html: val};\r\n    }\r\n\r\n    renderTip() {\r\n        if (this.props.ControleJogo.state.Tips[this.props.ControleJogo.state.focus])\r\n\r\n            return (\r\n                <div className=\"p-5 bg-white  text-black1 arround-12 text-center\">\r\n                    <h5 className=\"text-color1\">Dica</h5>\r\n                    <p\r\n                    dangerouslySetInnerHTML={this.createMarkup(this.props.ControleJogo.Construtor.principal[this.props.ControleJogo.state.focus].Dica)}>\r\n\r\n                    </p>\r\n                </div>\r\n            )\r\n        else\r\n            return <i className=\"material-icons md-light text-white text-black1 md-7em\">lock</i>\r\n    }\r\n\r\n    renderPontos() {\r\n        if (!this.props.ControleJogo.state.Tips[this.props.ControleJogo.state.focus])\r\n            return <div className=\"text-center\"> <p>- 50 pontos</p> </div>\r\n    }\r\n\r\n    renderButtonTip() {\r\n        if (this.props.ControleJogo.state.Tips[this.props.ControleJogo.state.focus])\r\n            return ;\r\n        else if(this.props.ControleJogo.state.tips === 0)\r\n        return (\r\n            <div className=\"modal-footer pb-4 border-top-0 text-center justify-content-center\">\r\n                <button type=\"button\" className=\"button-custom inicial bg-gray1 arround-6 disabled\" >Acabaram as dicas</button>\r\n            </div>\r\n        );\r\n        else\r\n        return (\r\n                <div className=\"modal-footer pb-4 border-top-0 text-center justify-content-center\">\r\n                    <button type=\"button\" className=\"button-custom inicial bg-color4 arround-6\" onClick={() => this.useTip()}>Desbloquear dica</button>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                {/* <h3>Tip</h3> */}\r\n                {/* // eslint-disable*/}\r\n                <div className=\"modal fade \" id=\"staticTips\"  data-bs-keyboard=\"false\" tabIndex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog modal-dialog-centered \">\r\n                        <div className=\"modal-content bg-color1 text-white\">\r\n                            <div className=\"modal-header border-bottom-0\">\r\n                                <p className=\"modal-title\" id=\"staticBackdropLabel\" \r\n                                dangerouslySetInnerHTML={this.createMarkup((this.props.ControleJogo.state.focus + 1)+\". \"+ this.props.ControleJogo.Construtor.principal[this.props.ControleJogo.state.focus].Contexto)}\r\n                                >\r\n                                    </p>\r\n                                <button type=\"button\" className=\"btn-close align-self-start p-2\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                            </div>\r\n                            <div className=\"modal-body justify-content-center\">\r\n\r\n                                <div className=\"p-2 d-flex justify-content-center align-self-center\">{this.renderTip()} </div>\r\n                                \r\n                                {this.renderPontos()}\r\n                            </div>\r\n\r\n                            {this.renderButtonTip()}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport default class Contexto extends React.Component {\r\n  // eslint-disable-next-line no-useless-constructor\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  useTip() {\r\n    this.props.ControleJogo.useTip();\r\n    this.props.update();\r\n  }\r\n\r\n  createMarkup(val) {\r\n    return { __html: this.props.ControleJogo.state.focus + 1 + \". \" + val };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* <h3>Tip</h3> */}\r\n        {/* // eslint-disable-next-line */}\r\n        <div\r\n          className=\"modal fade \"\r\n          id=\"staticContexto\"\r\n          data-bs-keyboard=\"false\"\r\n          aria-labelledby=\"staticBackdropLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered \">\r\n            <div className=\"modal-content bg-color1 text-white\">\r\n              <div className=\"modal-header border-bottom-0\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close align-self-start p-2\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                ></button>\r\n              </div>\r\n              <div className=\"modal-body justify-content-center\">\r\n                \r\n                <div\r\n                  className=\"contexto-incial mb-0 text-white1\"\r\n                  dangerouslySetInnerHTML={this.createMarkup(\r\n                    this.props.ControleJogo.Construtor.principal[\r\n                      this.props.ControleJogo.state.focus\r\n                    ].Contexto\r\n                  )}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\nimport React from \"react\";\r\nimport Buttons from \"./SubViewComponentsJogo/teclado/Buttons\";\r\nimport Gaps from \"./SubViewComponentsJogo/teclado/Gaps\";\r\nimport Tip from \"./SubViewComponentsJogo/teclado/Tip\";\r\nimport Contexto from \"./SubViewComponentsJogo/teclado/Contexto\";\r\n\r\n\r\nexport default class teclado extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.itens = this.props.ControleJogo.Construtor.principal\r\n        this.state = {\r\n            gap: Array(this.itens.length).fill(0)\r\n        }\r\n        this.selectGap = this.selectGap.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.setState((state, props) => ({\r\n            gap: Array(this.itens.length).fill(0)\r\n        }));\r\n    }\r\n\r\n    // Linked Funcitons\r\n\r\n    next() {\r\n\r\n        this.props.ControleJogo.next()\r\n        this.props.update();\r\n    }\r\n\r\n    prev() {\r\n        this.props.ControleJogo.prev()\r\n        this.props.update();\r\n    }\r\n\r\n    selectLetter() {\r\n        this.props.ControleJogo.selectLetter()\r\n        this.props.update();\r\n    }\r\n\r\n\r\n    // End Linked Funcitons\r\n\r\n\r\n    selectGap(index) {\r\n\r\n        if (this.itens[this.props.ControleJogo.state.focus].letras.length <= index)\r\n            this.next()\r\n        else {\r\n            if (!this.props.ControleJogo.state.hitWord[this.props.ControleJogo.state.focus]) {\r\n                let aux = this.state.gap;\r\n\r\n                aux[this.props.ControleJogo.state.focus] = index\r\n                \r\n                this.setState((state, props) => ({\r\n                    gap: aux\r\n                }));\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    createMarkup(val) {\r\n        return { __html: (this.props.ControleJogo.state.focus + 1) + \". \" + val };\r\n    }\r\n\r\n    truncText() {\r\n        if (this.itens[this.props.ControleJogo.state.focus].Contexto.length > 50 && window.screen.width < 700)\r\n            return (\r\n                <div className=\"ptb-2 flex-grow-1 d-flex\">\r\n                    <div className=\"align-self-center flex-grow-1\">\r\n                        <p data-bs-toggle=\"modal\" data-bs-target=\"#staticContexto\" className=\" contexto-incial mb-0 text-white1\" dangerouslySetInnerHTML={this.createMarkup(this.itens[this.props.ControleJogo.state.focus].Contexto.substring(0,50) + '...')}>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"p-1 align-self-center\">\r\n                        <i data-bs-toggle=\"modal\" data-bs-target=\"#staticContexto\" className=\"material-icons md-light text-white1 text-black1 md-24\">add_circle</i>\r\n                    </div>\r\n                </div>)\r\n        else\r\n            return (\r\n                <div className=\"ptb-2 flex-grow-1 d-flex\">\r\n                    <div className=\"align-self-center\" >\r\n                        <p className=\" contexto-incial mb-0 text-white1\" dangerouslySetInnerHTML={this.createMarkup(this.itens[this.props.ControleJogo.state.focus].Contexto)}>\r\n                        </p>\r\n                    </div>\r\n                </div>)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"flex-fill pb-2 p-md-5 teclado  w-100 bg-color2 pt-2 arround-bl-12\">\r\n\r\n                <div className=\"d-flex container \">\r\n                    <div className=\"p-2 align-self-center\">\r\n                        <button onClick={() => this.prev()} type=\"button\" className=\"button-teclas bg-color4 buttonR teclado-buttonR\"><i className=\"material-icons md-light text-black1 md-48 teclado-buttonR\">arrow_left</i></button>\r\n\r\n                    </div>\r\n\r\n                    {this.truncText()}\r\n\r\n                    <div className=\"p-2 align-self-center\">\r\n                        <button onClick={() => this.next()} type=\"button\" className=\"button-teclas bg-color4 buttonR teclado-buttonR\"><i className=\"material-icons md-light text-black1 md-48 teclado-buttonR\">arrow_right</i></button>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <Gaps\r\n                    ControleJogo={this.props.ControleJogo}\r\n                    update={this.props.update}\r\n                    ControleGap={this.selectGap}\r\n                    StateGap={this.state}\r\n                />\r\n\r\n                <Buttons\r\n                    ControleJogo={this.props.ControleJogo}\r\n                    update={this.props.update}\r\n                    ControleGap={this.selectGap}\r\n                    StateGap={this.state}\r\n                />\r\n\r\n                <Tip\r\n                    ControleJogo={this.props.ControleJogo}\r\n                    update={this.props.update}\r\n                />\r\n\r\n                <Contexto\r\n                    ControleJogo={this.props.ControleJogo}\r\n                    update={this.props.update}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nexport default class Timer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { seconds: 0 , minutes: 0 };\r\n    }\r\n\r\n    tick() {\r\n        if (this.state.seconds === 59) {\r\n            this.setState(state => ({\r\n                minutes: state.minutes + 1\r\n            }));\r\n            this.setState(state => ({\r\n                seconds: 0\r\n            }));\r\n        } else {\r\n            this.setState(state => ({\r\n                seconds: state.seconds + 1\r\n            }));\r\n        }\r\n        this.updateProgressoTempo(this.state)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.interval = setInterval(() => this.tick(), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    updateProgressoTempo(tempo){\r\n        // console.log(\"Controle jogo\",this.props.ControleJogo.state.tempo);\r\n        this.props.ControleJogo.updateProgressoTempo(tempo)\r\n        this.props.update();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='time_value' className='value bg-color1 text-white1'>\r\n                {('00' + this.state.minutes).slice(-2)}:{('00' + this.state.seconds).slice(-2)}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport Timer from \"./Timer\";\r\n// Controladores\r\n\r\nexport default class Cell extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(this.props.Serve);\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  componentWillUnmount() {}\r\n\r\n  progresso( fase, estrela){\r\n    let pontos =  this.props.Serve.auth.usuario.estrelas[fase][estrela]\r\n    if(pontos >= this.props.ControleJogo.state.pontos)\r\n      return \"star_outline\"\r\n    else \r\n      return \"star\"\r\n  }\r\n\r\n  fracaoprogresso(){\r\n    let pontos = this.props.ControleJogo.state.pontos\r\n    let maximo = this.props.Serve.auth.usuario.estrelas[this.props.ControleJogo.ControleModo.getFase()][3]\r\n    return (pontos/maximo)*100\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex-fill d-flex col-sd-flex flex-column p-md-5\">\r\n        <div className=\"d-flex flex-row visor bg-white1 \">\r\n          <div className=\"tag text-color1 flex-grow-1 align-text-bottom\">\r\n            Cronômetro\r\n          </div>\r\n          <Timer\r\n            ControleJogo={this.props.ControleJogo}\r\n            update={this.props.update}\r\n            Serve={this.props.Serve}\r\n          />\r\n        </div>\r\n        <div className=\"d-flex flex-row visor bg-color1 mt-md-5\">\r\n          <div className=\"star-contain\">\r\n          <div className=\"material-icons-outlined  align-middle\">\r\n            {this.progresso(this.props.ControleJogo.ControleModo.getFase(),1)}\r\n          </div>\r\n          <div className=\"material-icons-outlined  align-middle\">\r\n            {this.progresso(this.props.ControleJogo.ControleModo.getFase(),2)}\r\n          </div>\r\n          <div className=\"material-icons-outlined  align-middle\">\r\n            {this.progresso(this.props.ControleJogo.ControleModo.getFase(),3)}\r\n          </div>\r\n          </div>\r\n        <div className=\"progress star-progress1 w-100\">\r\n        \r\n        <div className=\"progress-bar progress-bar-striped progress-bar-animated star-progress\" role=\"progressbar\" aria-valuenow={this.fracaoprogresso()} aria-valuemin=\"0\" aria-valuemax=\"100\" style={{width: this.fracaoprogresso()}}></div>\r\n\r\n        </div>\r\n        </div>\r\n        <div className=\"d-flex flex-row visor bg-white1 mt-md-5\">\r\n          <div className=\"tag text-color1 flex-grow-1 align-text-bottom\">\r\n            Pontuação\r\n          </div>\r\n          <div className=\"value bg-color1 text-white1\">\r\n            {this.props.ControleJogo.state.pontos < 0\r\n              ? \"-\" +\r\n                (\"0000\" + this.props.ControleJogo.state.pontos * -1).slice(-4)\r\n              : (\"0000\" + this.props.ControleJogo.state.pontos).slice(-4)}\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\n// Controladores\r\n\r\nconst status = {\r\n    found : { \r\n        backgroundColor: 'white',\r\n        color: 'black',\r\n        boxShadow: 'inset 0 0 0 1px black'\r\n\r\n    },\r\n    none : { \r\n        backgroundColor: 'none',\r\n        color: 'none'\r\n\r\n\r\n    },\r\n    select : { \r\n        backgroundColor: '#71aaff',\r\n        color: 'black',\r\n        boxShadow: 'inset 0 0 0 1px black'\r\n        \r\n\r\n    },\r\n    hit : { \r\n        backgroundColor: '#0D3A7D',\r\n        color: 'white',\r\n        boxShadow: 'inset 0 0 0 1px black'\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default class Cell extends React.Component {\r\n\r\n    constructor(props) {\r\n        \r\n        super(props);\r\n        this.tabuleiro = this.props.ControleJogo.Construtor.tabuleiro\r\n        \r\n    }\r\n\r\n    // Funções vinculadas com a Props.Jogo do componente pai\r\n\r\n    selectFocus(index){\r\n        if(index !== null){\r\n            this.props.ControleJogo.selectFocus(index)\r\n            this.props.update();\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n    }\r\n\r\n    renderLetter(letter){\r\n        if (letter && letter !== -1){\r\n            return letter\r\n        }\r\n           \r\n        else\r\n            return \" \"\r\n    }\r\n    \r\n    renderId(){\r\n\r\n        if(typeof this.tabuleiro.gabarito[this.props.index] === 'string' && this.tabuleiro.indice.includes(this.props.index) ){\r\n            let conteudo =  this.tabuleiro.indice.indexOf(this.props.index) + 1\r\n            return  React.createElement('span', { className: \"badge badge-indice position-absolute top-0 start-0 rounded-circle  z-index-badge\" },conteudo);\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div kdivey={this.props.index} className=\"flex w-100 h-cell text-center align-middle position-relative \"\r\n                 style={\r\n                     this.tabuleiro.gabarito[this.props.index] <= 0 ? \r\n                     status.none : \r\n                     this.tabuleiro.vinculo[this.props.index].length === 2 ?\r\n                     this.props.ControleJogo.state.hitWord[this.tabuleiro.vinculo[this.props.index][0]] === true || this.props.ControleJogo.state.hitWord[this.tabuleiro.vinculo[this.props.index][1]] === true?\r\n                     status.hit : \r\n                     this.tabuleiro.vinculo[this.props.index].includes(this.props.ControleJogo.state.focus) ?\r\n                     status.select : \r\n                     status.found : \r\n                     this.props.ControleJogo.state.hitWord[this.tabuleiro.vinculo[this.props.index][0]] === true? \r\n                     status.hit : \r\n                     this.tabuleiro.vinculo[this.props.index].includes(this.props.ControleJogo.state.focus) ?\r\n                     status.select : \r\n                     status.found}\r\n                 \r\n                 \r\n                 \r\n                 onClick={() => this.selectFocus(this.tabuleiro.vinculo[this.props.index][0] )}\r\n            >\r\n                {this.renderId()}\r\n                {/* {  this.props.index   } */}\r\n                {/* {Math.trunc(this.props.index/this.props.ControleJogo.ControleModo.getAltura())}  */}\r\n                {/* {this.renderLetter(this.tabuleiro.gabarito[this.props.index]) }    */}\r\n                {this.renderLetter(this.props.ControleJogo.state.statusBoard[this.props.index]) }\r\n            </div>\r\n        );\r\n    }\r\n}","\r\nimport React from \"react\";\r\n\r\n// SubViews\r\nimport Pontuacao from \"./SubViewComponentsJogo/tabuleiro/Pontuacao\"\r\nimport Cell from \"./SubViewComponentsJogo/tabuleiro/Cell\"\r\n\r\n\r\n\r\nexport default class tabuleiro extends React.Component {\r\n\r\n    constructor(props) {\r\n        \r\n        super(props);\r\n    }\r\n    \r\n\r\n    // Linked Functions\r\n\r\n\r\n\r\n    // End Linked Funcitons\r\n\r\n\r\n    // View Composition Functions\r\n\r\n    renderCell(lin,col) {\r\n        return <Cell \r\n            ref={React.createRef()}\r\n            key={col+lin*this.props.ControleJogo.ControleModo.getAltura()}\r\n            index={col+lin*this.props.ControleJogo.ControleModo.getAltura()}\r\n            ControleJogo={this.props.ControleJogo}\r\n            update={this.props.update}\r\n        />\r\n    }\r\n\r\n    renderRow(lin,col){\r\n        var cellBoard = [];\r\n        for (let index = 0; index < col; index++) {\r\n            cellBoard.push(this.renderCell(lin,index));\r\n        }\r\n        let keyindex = (lin*col)+100\r\n        return React.createElement('div', { key : keyindex, className: \"d-flex\" }, cellBoard);\r\n    }\r\n\r\n\r\n    renderBoard(lin,col) {\r\n        var rowsBoard = [];\r\n        for (let index = 0; index < lin; index++) {\r\n            rowsBoard.push(this.renderRow(index,col));\r\n        }\r\n        return React.createElement('div', { className: \"main-board container pt-2 pt-md-5 px-md-5\", key:10051 }, rowsBoard);\r\n    }\r\n\r\n    // End View Composition Functions\r\n   \r\n\r\n    render() {\r\n       \r\n        return (\r\n            <div className=\"flex-grow-1 d-flex flex-row col-md-flex align-items-center w-100 viewjogo bg-color3 arround-tl-12\">\r\n              <div  className=\" d-flex w-100-sm h-100-md\">\r\n                <Pontuacao key={5000} ControleJogo={this.props.ControleJogo} update={this.props.update}  Serve={this.props.Serve} /> \r\n              </div>\r\n              <div  className=\"flex-grow-1 h-100 w-100 d-flex\">\r\n              {this.renderBoard(this.props.ControleJogo.ControleModo.getAltura(),this.props.ControleJogo.ControleModo.getLargura())}\r\n\r\n              </div>\r\n            </div>\r\n        );\r\n    }\r\n}","\r\nimport React from \"react\";\r\n\r\n// Controladores\r\n\r\nconst status = {\r\n    found : { \r\n        backgroundColor: 'white',\r\n        color: 'black',\r\n        boxShadow: 'inset 0 0 0 1px black'\r\n\r\n    },\r\n    none : { \r\n        backgroundColor: 'none',\r\n        color: 'none'\r\n\r\n\r\n    },\r\n    select : { \r\n        backgroundColor: '#71aaff',\r\n        color: 'black',\r\n        boxShadow: 'inset 0 0 0 1px black'\r\n        \r\n\r\n    },\r\n    hit : { \r\n        backgroundColor: '#0D3A7D',\r\n        color: 'white',\r\n        boxShadow: 'inset 0 0 0 1px black'\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default class Cell extends React.Component {\r\n\r\n    constructor(props) {\r\n        \r\n        super(props);\r\n        this.tabuleiro = this.props.ControleJogo.Construtor.tabuleiro\r\n    }\r\n    \r\n    dicaList(){\r\n        if(this.props.ControleJogo.state.hitWord[this.props.index] || this.props.ControleJogo.state.Tips[this.props.index])\r\n        return(\r\n            <div className=\"m-2 p-2 bg-color3 arround-6\"\r\n            >\r\n                <div className=\"text-center\" dangerouslySetInnerHTML={this.createMarkup(this.props.ControleJogo.Construtor.principal[this.props.index].Dica)} >\r\n                    \r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n    renderLetter(letter){\r\n        if (letter && letter !== -1){\r\n            return letter\r\n        }\r\n           \r\n        else\r\n            return \" \"\r\n    }\r\n\r\n    renderCell(index) {\r\n        return (\r\n            <div key={index} className=\"flex-fill cell-lista\"                 \r\n            style={ \r\n                this.props.ControleJogo.state.hitWord[this.props.index] === true ?\r\n                status.hit : \r\n                this.props.index === this.props.ControleJogo.state.focus ?\r\n                status.select : \r\n                status.found}\r\n            >\r\n{this.renderLetter(this.props.ControleJogo.state.statusWords[this.props.index][index])}\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n    renderLista(items) {\r\n        var rowsLista = [];\r\n        for (let index = 0; index < items.length; index++) {\r\n            rowsLista.push(this.renderCell(index));\r\n        }\r\n        return React.createElement('div', { className: \" d-flex w-100 p-2 m-2\" }, rowsLista);\r\n    }\r\n\r\n    createMarkup(val) {\r\n        return {__html:(this.props.index + 1)+\".\" + val};\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mx-2 p-2 my-3 bg-white1 text-center arround-6 \"\r\n            >\r\n                <div className=\"fw-bolt-s\" dangerouslySetInnerHTML={this.createMarkup(this.props.ControleJogo.Construtor.principal[this.props.index].Contexto)}>\r\n\r\n                    \r\n\r\n                </div>\r\n\r\n                {this.dicaList()}\r\n\r\n                <div className=\"d-flex w-100\">\r\n                    {this.renderLista(this.props.ControleJogo.state.statusWords[this.props.index])}\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","\r\nimport React from \"react\";\r\nimport Item from \"./SubViewComponentsJogo/lista/Item\"\r\n\r\nexport default class lista extends React.Component {\r\n\r\n    // eslint-disable-next-line no-useless-constructor\r\n    constructor(props) {\r\n        \r\n        super(props);\r\n    \r\n    }\r\n\r\n    renderCell(index) {\r\n        return <Item \r\n            ref={React.createRef()}\r\n            key={index+10000}\r\n            index={index}\r\n            ControleJogo={this.props.ControleJogo}\r\n        />\r\n    }\r\n\r\n\r\n    renderLista(lin) {\r\n        var rowsLista = [];\r\n        for (let index = 0; index < lin; index++) {\r\n            rowsLista.push(this.renderCell(index));\r\n        }\r\n        return React.createElement('div', { className: \" container\" }, rowsLista);\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n       \r\n        return (\r\n            <div className=\"flex-fill text-black1\">\r\n                {this.renderLista(this.props.ControleJogo.Construtor.quantPalavras)}\r\n            </div>\r\n        );\r\n    }\r\n}","/* eslint-disable no-unused-vars */\r\n/**\r\n * @file Controle da execução em jogo.\r\n * jsdoc Board.js ControlLevel.js  Construtor.js ControlGame.js -d ../../documention\r\n * @author William Luis Alves Ferreira (git:illiamw)\r\n * @version 2.0.0\r\n */\r\n\r\nimport React from \"react\";\r\n\r\n//Logos\r\n/* eslint-disable no-unused-vars */\r\n\r\n//Componentes de roteamento\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\n/**\r\n * @param {Null} Null Null\r\n * @description Classe geradora da função app\r\n * @constructor\r\n */\r\n\r\nexport default class Vitoria extends React.Component {\r\n  // eslint-disable-next-line no-useless-constructor\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateProgresso();\r\n  }\r\n\r\n  updateProgresso() {\r\n    console.log(\"modulo auth\", this.props.Serve.auth.usuario);\r\n    // this.props.Serve.auth.usuario.setProgresso(this.props.ControleJogo.modo,this.props.ControleJogo.ControleModo.getFase(),this.props.ControleJogo.state.pontos,this.props.ControleJogo.state.tempo)\r\n    this.props.Serve.auth.usuario.setProgresso(\r\n      this.props.ControleJogo.modo,\r\n      this.props.ControleJogo.ControleModo.getFase(),\r\n      8000,\r\n      { minutes: 2, seconds: 58 }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    // ROTEAMENTO - colocar controle de estados da aplicação\r\n    return (\r\n      <div className=\"d-flex w-100 flex-row  min-vh-100  align-items-center p-0\">\r\n        <div className=\"d-flex flex-column container align-items-center w-100 view arround-12  \">\r\n          <div className=\"d-flex w-100  h-100 bg-color1  arround-12 p-5\">\r\n            <div className=\" text-center flex-fill row w-100  h-100 bgVitoria   d-flex flex-row bg-white1 align-items-center w-100 arround-12 \">\r\n              <div className=\"col-md\">\r\n                <div className=\"w-100 d-flex py-2 align-items-center\">\r\n                  <p className=\" vitoria p-3 mx-5 flex-fill align-self-center bg-color1 w-fit arround-12\">\r\n                    PARABÉNS!\r\n                  </p>\r\n                </div>\r\n                <div className=\"flex-fill d-flex justify-content-evenly  flex-row p-md-5\">\r\n                  <div className=\"d-flex flex-row visor bg-color1 \">\r\n                    <div className=\"tag text-white1 flex-grow-1 align-text-bottom\">\r\n                      Cronômetro\r\n                    </div>\r\n                    <div\r\n                      id=\"time_value\"\r\n                      className=\"value bg-white1 text-color1\"\r\n                    >\r\n                      {(\r\n                        \"00\" + this.props.ControleJogo.state.tempo.minutes\r\n                      ).slice(-2)}\r\n                      :\r\n                      {(\r\n                        \"00\" + this.props.ControleJogo.state.tempo.seconds\r\n                      ).slice(-2)}\r\n                    </div>{\" \"}\r\n                  </div>\r\n                  <div className=\"d-flex flex-row visor bg-color1 \">\r\n                    <div className=\"tag text-white1 flex-grow-1 align-text-bottom\">\r\n                      Pontuação\r\n                    </div>\r\n                    <div className=\"value bg-white1 text-color1\">\r\n                      {this.props.ControleJogo.state.pontos < 0\r\n                        ? \"-\" +\r\n                          (\r\n                            \"0000\" +\r\n                            this.props.ControleJogo.state.pontos * -1\r\n                          ).slice(-4)\r\n                        : (\"0000\" + this.props.ControleJogo.state.pontos).slice(\r\n                            -4\r\n                          )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <p>\r\n                  {\" \"}\r\n                  Você concluiu o tema{\" \"}\r\n                  {this.props.ControleJogo.ControleModo.nivel} nível{\" \"}\r\n                  {this.props.ControleJogo.ControleModo.getFase()}!\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"col-md\">\r\n                <p>\r\n                  Aprenda ainda mais enquanto se diverte! <br /> Desafie-se e\r\n                  jogue novamente\r\n                </p>\r\n\r\n                <Link to=\"/modo\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"button-custom inicial bg-color4 arround-6\"\r\n                  >\r\n                    <span className=\"material-icons-outlined md-44 align-middle pe-3\">\r\n                      sports_esports\r\n                    </span>\r\n                    JOGAR\r\n                  </button>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\n// ViewsComponents\r\nimport Teclado from \"./ViewComponentsJogo/teclado\";\r\nimport Tabuleiro from \"./ViewComponentsJogo/tabuleiro\";\r\nimport Lista from \"./ViewComponentsJogo/lista\";\r\nimport ModalFull from \"./ViewComponents/ViewComponentsNav/ModalFull\";\r\nimport Vitoria from \"./ViewComponentsJogo/SubViewComponentsJogo/vitoria\";\r\n\r\nexport default class ViewJogo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      spinner: false,\r\n      vitoria: true,\r\n    };\r\n\r\n    // Vinculo entre que força atualização entre os filhos, este componente, e o props.Jogo\r\n    this.update = this.update.bind(this);\r\n\r\n    //Funções próprias - caso necessario\r\n    this.next = this.next.bind(this);\r\n\r\n    \r\n  }\r\n\r\n  \r\n\r\n  \r\n\r\n  componentDidMount() {\r\n    \r\n  }\r\n\r\n  next() {\r\n    this.props.Jogo.next();\r\n    this.update();\r\n  }\r\n\r\n  update() {\r\n    this.forceUpdate();\r\n  }\r\n\r\n  render() {\r\n    // if (!this.props.Jogo.state.hitWord.includes(false))\r\n    if(true)\r\n      return <Vitoria ControleJogo={this.props.Jogo} Serve={this.props.Serve}  />;\r\n    else\r\n      return (\r\n        <div className=\"d-flex w-100 flex-row container-md min-vh-100 bg align-items-jogo  p-0\">\r\n          <div className=\"flex-fill d-flex flex-column align-items-center w-100 viewjogo  arround-12 \">\r\n            \r\n            <Tabuleiro ControleJogo={this.props.Jogo} update={this.update}  Serve={this.props.Serve} />\r\n        \r\n            <Teclado ControleJogo={this.props.Jogo} update={this.update} />\r\n          </div>\r\n          <div id=\"lista-posicao\" className=\"flex-fill bg-color2 viewjogo arround-tr-12 arround-br-12 none-md lista\">\r\n            <Lista ControleJogo={this.props.Jogo} update={this.update} />\r\n          </div>\r\n\r\n          <ModalFull vinculo=\"modal-lista\">\r\n            <Lista ControleJogo={this.props.Jogo} update={this.update} />\r\n          </ModalFull>\r\n\r\n          <i\r\n            className=\"position-absolute  d-md-none icon-list end-0 material-icons-outlined md-gray md-36  mx-3 my-md-3\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#modal-lista\"\r\n          >\r\n            view_sidebar\r\n          </i>\r\n          \r\n        </div>\r\n      );\r\n  }\r\n}\r\n"],"sourceRoot":""}